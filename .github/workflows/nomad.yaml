name: Build Nomad jobs

on:
  push:
    branches: [main]

jobs:
  build:
    name: "Test and push"
    runs-on: ubuntu-20.04
    env:
      CC: clang
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Bazel
        run: |
          sudo curl -L https://github.com/bazelbuild/bazel/releases/download/3.7.0/bazel-3.7.0-linux-x86_64 -o /usr/local/bin/bazel
          sudo chmod +x /usr/local/bin/bazel

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('homebase/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache Next.js build output
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/homebase/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('homebase/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Login to Docker
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up build cache credentials
        run: echo "$GOOGLE_CREDENTIALS_JSON" > $RUNNER_TEMP/credentials.json
        env:
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}

      - name: Run tests
        run: |
          bazel \
            test \
            --remote_cache=https://storage.googleapis.com/mjm-github-actions-bazel-cache \
            --google_credentials=$RUNNER_TEMP/credentials.json \
            --config=ci \
            //...

      - name: Build Homebase Next.js app
        run: |
          yarn install --frozen-lockfile
          yarn build
        working-directory: homebase

      - name: Build and push container images
        run: |
          bazel query 'kind(container_push, //...)' \
            | xargs -n1 \
              bazel run \
                --remote_cache=https://storage.googleapis.com/mjm-github-actions-bazel-cache \
                --google_credentials=$RUNNER_TEMP/credentials.json \
                --config=ci \
                --platforms @io_bazel_rules_go//go/toolchain:linux_arm64

      - name: Build nomadic binary
        run: |
          bazel build \
            --remote_cache=https://storage.googleapis.com/mjm-github-actions-bazel-cache \
            --google_credentials=$RUNNER_TEMP/credentials.json \
            --config=ci \
            --platforms @io_bazel_rules_go//go/toolchain:linux_arm64 \
            //deploy/cmd/nomadic

      - name: Copy nomadic binary into place
        run: |
          mkdir ${{ runner.temp }}/nomadic
          cp bazel-bin/deploy/cmd/nomadic/nomadic_/nomadic ${{ runner.temp }}/nomadic

      - name: Store nomadic binary
        uses: actions/upload-artifact@v2
        with:
          name: nomadic
          path: ${{ runner.temp }}/nomadic/
          if-no-files-found: error
